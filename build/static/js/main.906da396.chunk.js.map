{"version":3,"sources":["partials/Chat.js","partials/Controls.js","World.js","LandingPage.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["Chat","ws","chats","useState","chatMessage","setChatMessage","sendChat","useCallback","emit","message","className","filter","a","username","map","chat","src","image","alt","type","placeholder","style","margin","value","onChange","event","currentTarget","onKeyPress","code","Control","videoRef","updateWS","playing","setPlaying","useEffect","on","data","console","log","current","currentTime","paused","pause","play","callback","delay","savedCallback","useRef","id","setInterval","clearInterval","useInterval","isScrubbing","setScrubber","scrubber","setIsScrubbing","onClick","pv","toString","padStart","onMouseDown","onMouseUp","min","max","duration","evt","prompt","rad","x","Math","PI","World","sid","state","maxSpeed","roomYRotation","_setRoomYRotation","dr","setDr","setValue","window","innerWidth","offset","setOffset","posX","_setPosX","posZ","_setPosZ","cameraCoordinates","avatars","setAvatars","videoSrc","setChats","king","dy","innerHeight","setPosX","obj","setPosZ","roomYRotationRef","setRoomYRotation","nv","keysPressed","keyFuncs","cos","sin","update","forEach","document","addEventListener","ev","name","Array","from","Set","keySet","delete","removeKey","body","requestPointerLock","mozRequestPointerLock","pointerLockElement","mozPointerLockElement","movementX","transform","face","orientation","dz","dx","styles","backgroundColor","inside","ref","width","height","autoPlay","RenderAvatars","JSON","stringify","color","position","top","N","E","W","S","T","B","extraStyles","includes","fontSize","Object","keys","av","y","z","size","avatarStyles","avatar","animate","func","interval","to","step","sleep","n","Promise","r","setTimeout","resolve","val","LandingPage","setState","loading","animating","setAnimating","opacity","disabled","then","page","newRoom","generator","AvatarGenerator","Login","roomID","random","setUsername","avatarImageSRC","generateRandomAvatar","trim","required","length","App","connectedWS","setConnectedWS","setSID","location","pathname","substring","setRoomID","fetch","json","io","endpoint","history","pushState","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.906da396.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport \"./chat.sass\";\n\nexport default function Chat({ws, chats}) {\n    const [chatMessage, setChatMessage] = useState(null);\n    const sendChat = useCallback(() => {\n        ws.emit('chat', {message: chatMessage})\n        setChatMessage('');\n    }, [ws, chatMessage])\n    return <div className=\"chatContainer\">\n        <div className=\"chatbox\">\n            {chats.filter(a => a.username !== \"undefined left\").map(chat => <div className=\"chatMessage\">\n                <img\n                    src={'img/' + chat.image + '1.png'}\n                    alt=\"avatar\"/>\n                <span className=\"author\">{chat.username}</span>\n                <p>{chat.message}</p>\n            </div>)}\n        </div>\n        <input type=\"text\" placeholder={\"chat :D\"} style={{margin: 0}} value={chatMessage}\n               onChange={(event) => setChatMessage(event.currentTarget.value)}\n               onKeyPress={(event) => event.code === \"Enter\" ? sendChat() : ''}\n        />\n    </div>\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport \"./control.sass\";\n\nexport default function Control({ws, videoRef, updateWS}) {\n\n    const [playing, setPlaying] = useState(false)\n\n    useEffect(() => {\n        ws.on('status', (data) => {\n            console.log(data);\n            if (videoRef.current) videoRef.current.src = data.src;\n            if (videoRef.current) videoRef.current.currentTime = data.currentTime;\n            if (data.paused) videoRef.current.pause();\n            else videoRef.current.play();\n        });\n\n    }, [videoRef, ws])\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n\n        // Remember the latest callback.\n        useEffect(() => {\n            savedCallback.current = callback;\n        }, [callback]);\n\n        // Set up the interval.\n        useEffect(() => {\n            function tick() {\n                savedCallback.current();\n            }\n\n            if (delay !== null) {\n                let id = setInterval(tick, delay);\n                return () => clearInterval(id);\n            }\n        }, [delay]);\n    }\n\n    useInterval(() => {\n        if (!isScrubbing) setScrubber(videoRef.current?.currentTime || 0)\n    }, 1000)\n\n    let [scrubber, setScrubber] = useState(videoRef.current?.currentTime || 0);\n    let [isScrubbing, setIsScrubbing] = useState(false);\n    if (!videoRef.current) return <div className=\"controlContainer\">\n        <div className=\"controlbox\">\n            <p>Loading...</p>\n        </div>\n    </div>\n\n\n    return <div className=\"controlContainer\">\n        <div className=\"controlbox\">\n            <button className=\"icon\" onClick={() => {\n                if (playing) videoRef.current.pause();\n                else videoRef.current.play();\n                setPlaying(pv => !pv);\n                updateWS();\n            }}>\n                <span className=\"material-icons-two-tone\">\n                    {playing ? 'pause' : 'play_arrow'}\n                </span>\n            </button>\n\n            <span\n                className={'scrubber'}>{videoRef.current.currentTime / 60 >> 0}:{((videoRef.current.currentTime >> 0) % 60).toString().padStart(2, '0')}</span>\n            <input\n                onMouseDown={() => setIsScrubbing(true)}\n                onMouseUp={() => {\n                    videoRef.current.currentTime = scrubber;\n                    updateWS();\n                    setIsScrubbing(false)\n                }}\n                type=\"range\" value={scrubber} min={0} max={videoRef.current?.duration || 0}\n                onChange={evt => {\n                    setScrubber(evt.currentTarget.value);\n                }}\n            />\n            <button className=\"icon\" onClick={() => {\n                videoRef.current.src = prompt('New video URL');\n                videoRef.current.currentTime = 0;\n                updateWS();\n            }}>\n                <span className=\"material-icons-two-tone\">\n                    playlist_add\n                </span>\n            </button>\n        </div>\n    </div>\n}","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport {io} from \"socket.io-client\";\n\nimport Chat from './partials/Chat';\nimport Controls from './partials/Controls';\n\n\nconst rad = (x) => x * Math.PI / 180;\n\nexport default function World({ws, sid, state}) {\n    const acceleration = 0.5;\n    const maxSpeed = 10;\n    const turnSpeed = .1;\n\n    const [roomYRotation, _setRoomYRotation] = useState(0);\n    const [dr, setDr] = useState(0);\n\n    const [value, setValue] = useState(0); // integer state; used to force render\n\n    // start with the center of the box in the center of the screen\n    const [offset, setOffset] = useState(-(window.innerWidth) / 2);\n\n    const [posX, _setPosX] = useState(0);\n    const [posZ, _setPosZ] = useState(offset + 1196 / 2);\n    const cameraCoordinates = useRef({posX, posZ});\n\n    const [avatars, setAvatars] = useState({});\n\n    const videoRef = useRef(null);\n    const [videoSrc, setVideoSrc] = useState(null);\n\n    const [chats, setChats] = useState([]);\n\n    const [king, setKing] = useState(false);\n\n    // set interval but react hook\n    // https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n\n        // Remember the latest callback.\n        useEffect(() => {\n            savedCallback.current = callback;\n        }, [callback]);\n\n        // Set up the interval.\n        useEffect(() => {\n            function tick() {\n                savedCallback.current();\n            }\n\n            if (delay !== null) {\n                let id = setInterval(tick, delay);\n                return () => clearInterval(id);\n            }\n        }, [delay]);\n    }\n\n    // == INCOMING WEBSOCKET == beep boop beep boop\n    useEffect(() => {\n        console.log(ws);\n        ws.on('avatars', data => {\n            setAvatars(data)\n            setValue(pv => (pv + 1) % 100);\n        });\n        if (!state.data.king) ws.on('status', (data) => {\n            console.log(data);\n            videoRef.current.src = data.src;\n            videoRef.current.currentTime = data.currentTime;\n            if (data.paused) videoRef.current.pause();\n            else videoRef.current.play();\n        });\n        ws.on('chat', (chat) => {\n            setChats(pv => [...pv, chat])\n            console.log(chat);\n        })\n\n    }, [ws])\n\n    const updateWS = useCallback(() => {\n        ws.emit('update', {\n            src: videoRef.current.src,\n            currentTime: videoRef.current.currentTime,\n            paused: videoRef.current.paused\n        })\n    }, [ws, videoRef])\n\n\n    // emit current location every 100ms\n    useInterval(() => {\n        ws.emit('location', {posZ: posZ - (offset + 1196 / 2), posX});\n    }, 100, [posX, posZ])\n\n\n    // helper functions: location (dxyz) math\n    const dy = (window.innerHeight - 596) / 2;\n    const setMaxMinPos = v => v; // Math.max(-500, Math.min(v, 500)); // use this if you want them boxed in a 500x500px\n    const setPosX = obj => {\n        if (typeof obj === \"function\") _setPosX(pv => setMaxMinPos(obj(pv)));\n        else _setPosX(setMaxMinPos(obj));\n        cameraCoordinates.current = {...cameraCoordinates.current, posX}\n    }\n    const setPosZ = obj => {\n        if (typeof obj === \"function\") _setPosZ(pv => setMaxMinPos(obj(pv)));\n        else _setPosZ(setMaxMinPos(obj));\n        cameraCoordinates.current = {...cameraCoordinates.current, posZ}\n    }\n    const roomYRotationRef = useRef(0);\n    const setRoomYRotation = (obj) => {\n        if (typeof obj === \"function\") {\n            _setRoomYRotation(pv => {\n                let nv = obj(pv);\n                roomYRotationRef.current = nv;\n                return nv % 360;\n            })\n        } else {\n            _setRoomYRotation(pv => {\n                roomYRotationRef.current = obj;\n                return obj % 360;\n            })\n        }\n    }\n\n    // helper functions: interactions\n    const keysPressed = useRef([]);\n    const addKey = (name) => keysPressed.current = Array.from(new Set([...keysPressed.current, name]));\n    const removeKey = (name) => {\n        let keySet = new Set(keysPressed.current);\n        keySet.delete(name);\n        keysPressed.current = Array.from(keySet);\n    }\n\n    // helper functions: speed\n    function speed(currentVal, posOrNeg) {\n        return maxSpeed * posOrNeg;\n        // the two equations this first line combines are\n        //   acceleration + currentVal >= maxSpeed --> then just return maxSpeed\n        //   -acceleration + currentVal <= -maxSpeed --> then just return -maxSpeed\n        if (posOrNeg * currentVal + acceleration >= posOrNeg * maxSpeed) return posOrNeg * maxSpeed;\n        else return currentVal + posOrNeg * acceleration;\n    }\n\n    const speedValue = useRef(0);\n\n    // helper functions: server update + on interaction code\n    const keyFuncs = code => {\n        switch (code) {\n            case \"ArrowRight\":\n                setDr(pv => pv + 1);\n                break;\n            case \"ArrowLeft\":\n                setDr(pv => pv - 1);\n                break;\n            case \"KeyW\":\n                setPosX(pv => pv + Math.cos(rad(roomYRotationRef.current)) * maxSpeed);\n                setPosZ(pv => pv + Math.sin(rad(roomYRotationRef.current)) * maxSpeed)\n                break;\n            case \"KeyS\":\n                setPosX(pv => pv + Math.cos(rad(roomYRotationRef.current + 180)) * maxSpeed);\n                setPosZ(pv => pv + Math.sin(rad(roomYRotationRef.current + 180)) * maxSpeed)\n                break;\n            case \"KeyD\":\n                setPosX(pv => pv + Math.cos(rad(roomYRotationRef.current + 90)) * maxSpeed);\n                setPosZ(pv => pv + Math.sin(rad(roomYRotationRef.current + 90)) * maxSpeed)\n                break;\n            case \"KeyA\":\n                setPosX(pv => pv + Math.cos(rad(roomYRotationRef.current - 90)) * maxSpeed);\n                setPosZ(pv => pv + Math.sin(rad(roomYRotationRef.current - 90)) * maxSpeed)\n                break;\n            case \"Space\":\n                setOffset(-(window.innerWidth) / 2)\n                setPosZ(offset + 1196 / 2);\n                setPosX(0);\n                setRoomYRotation(0);\n                setDr(0);\n                break;\n            default:\n                console.log(code);\n                break;\n        }\n    }\n    const update = useCallback(() => {\n        let keys = keysPressed.current;\n        keys.forEach(code => keyFuncs(code));\n    }, [keyFuncs])\n    useEffect(() => {\n        document.addEventListener(\"keydown\", ev => {\n            addKey(ev.code);\n        });\n        document.addEventListener(\"keyup\", ev => {\n            removeKey(ev.code)\n        })\n        document.body.addEventListener(\"click\", document.body.requestPointerLock || document.body.mozRequestPointerLock);\n\n        document.addEventListener(\"mousemove\", updateRotation, false);\n\n        function updateRotation(ev) {\n            if (document.pointerLockElement ||\n                document.mozPointerLockElement) {\n                setRoomYRotation(pv => pv + ev.movementX * turnSpeed)\n            }\n        }\n\n        setInterval(update, 50)\n    }, [])\n\n    return (\n        <>\n            <Chat ws={ws} chats={chats}/>\n            {state.data.king && <Controls ws={ws} videoRef={videoRef} updateWS={updateWS}/>}\n            <section id=\"container\">\n                <div id=\"room\" style={{\n                    transform: `rotateY(${roomYRotation}deg)`\n                }}>\n                    {face({\n                        orientation: 'N', dy,\n                        dz: posZ,\n                        dx: posX,\n                        styles: {backgroundColor: 'rgba(0,0,0,0.3)'},\n                        inside: <video\n                            ref={videoRef}\n                            src={videoSrc}\n                            style={{width: '100%', height: '100%'}}\n                            autoPlay={true}/>\n                    })}\n                    {/*{box({posX, posZ, dy, size: 50, y: -25})}*/}\n                    <RenderAvatars sid={sid} avatars={avatars} posX={posX} posZ={posZ} dy={dy}\n                                   key={JSON.stringify(avatars)}/>\n                    {/*{debugFaces({posX, posZ, dy})}*/}\n                </div>\n            </section>\n\n            <pre style={{color: 'white', position: 'fixed', top: 0, backgroundColor: 'black'}}>\n               rot: {roomYRotation}deg <br/>\n               dx: {posX}px dz: {posZ}px <br/>\n               dr: {dr}deg offset: {offset}px <br/>\n               sid: {sid} <br/>\n               val: {value}\n           </pre>\n        </>\n    );\n\n}\n\n/**\n * Creates a face [3D Wall]\n *\n * @param width\n * @param height\n * @param styles\n * @param inside\n * @param orientation\n * @param dz\n * @param dx\n * @param dy\n * @param dr\n * @returns {JSX.Element}\n */\nfunction face({width = 1196, height = 596, styles = {}, inside, orientation, dz, dx, dy, dr = 0}) {\n    let transform = {\n        N: `rotateY(${dr}deg) translateZ(${dx}px) translateX(${-dz}px) translateY(${dy}px)`,\n        E: `rotateY(${-90 + dr}deg) translateZ(${dz}px) translateX(${dx}px) translateY(${dy}px)`,\n        W: `rotateY(${90 + dr}deg) translateZ(${dz}px) translateX(${dx}px) translateY(${dy}px)`,\n        S: `rotateY(${180 + dr}deg) translateZ(${dx}px) translateX(${dz}px) translateY(${dy}px)`,\n        T: `rotateX(90deg) translateZ(${dy}px) translateX(${-dz}px) translateY(${dx}px)`,\n        B: `rotateX(90deg) translateZ(-${dy}px) translateX(${-dz}px) translateY(${dx}px)`,\n    }\n    let extraStyles = ['T', 'B'].includes(orientation) ? {\n        // width: 1196,\n        // height: 1196,\n        // top: -300,\n    } : {fontSize: height * .9}\n    return <figure style={{\n        width,\n        height,\n        transform: transform[orientation],\n        ...extraStyles,\n        ...styles,\n    }}>\n        {\n            inside || orientation\n        }\n    </figure>\n}\n\nfunction debugFaces({posX, posZ, dy}) {\n    let size = 50;\n    return <>{face({\n        orientation: 'N',\n        dz: 0,\n        dx: 0,\n        dy: dy,\n        styles: {backgroundColor: 'yellow'},\n        width: size,\n        height: size,\n        inside: 'X'\n    })}\n        {face({\n            orientation: 'E',\n            dz: 0,\n            dx: 0,\n            dy: dy,\n            styles: {backgroundColor: 'yellow'},\n            width: size,\n            height: size,\n            inside: 'Z'\n        })}\n        {face({\n            orientation: 'N',\n            dz: posZ,\n            dx: posX,\n            dy: dy,\n            styles: {backgroundColor: 'green'},\n            width: size,\n            height: size,\n            inside: 'X'\n        })}\n        {face({\n            orientation: 'E',\n            dz: posZ,\n            dx: posX,\n            dy: dy,\n            styles: {backgroundColor: 'green'},\n            width: size,\n            height: size,\n            inside: 'Z'\n        })}\n    </>\n}\n\nfunction box({posX, posZ, dy, x = 200, y = 0, z = -300, size = 100}) {\n    return <>\n        {face({\n            orientation: 'N',\n            dz: posZ + z,\n            dx: posX + x,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: 'red'},\n            width: size,\n            height: size,\n            inside: 'a'\n        })}\n        {face({\n            orientation: 'E',\n            dz: posZ + z - size / 2,\n            dx: posX + x - size / 2,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: 'green'},\n            width: size,\n            height: size,\n            inside: 'a'\n        })}\n        {face({\n            orientation: 'E',\n            dz: posZ + z + size / 2,\n            dx: posX + x - size / 2,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: 'blue'},\n            width: size,\n            height: size,\n            inside: 'a'\n        })}\n        {face({\n            orientation: 'N',\n            dz: posZ + z,\n            dx: posX + x - size,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: 'pink'},\n            width: size,\n            height: size,\n            inside: 'a'\n        })}\n    </>\n}\n\nfunction rotatePlane({x, z, r}) {\n    // math here https://www.geogebra.org/geometry/yxzwugkv\n    let deg = rad(r);\n    let coordX = Math.abs(x) * Math.cos(deg) + Math.abs(z) * Math.sin(deg);\n    let coordZ = Math.abs(x) * Math.sin(deg) - Math.abs(z) * Math.cos(deg);\n    let dist = Math.sqrt(Math.pow(x - coordX, 2) + Math.pow(z - coordZ, 2));\n    let angleEAA = (Math.atan(Math.abs(x / z)) * 180 / Math.PI) + 90 - r / 2;\n    return [dist * Math.sin(rad(angleEAA)), dist * Math.cos(rad(angleEAA))];\n}\n\nfunction avatar({color = 'darkblue', posX, posZ, dy, x = 200, y = 0, z = -300, size = 51, dr = 0, sid}) {\n    // let [mvX, mvZ] = rotatePlane({x: posX + x, z: posZ + z, r: dr});\n    let dz = (posZ + z)// - mvZ// + mvX;\n    let dx = (posX + x)// + mvX// + mvZ;\n    let avatarStyles = {\n        margin: 0\n    }\n    return <>\n        {face({\n            orientation: 'N',\n            dz,\n            dx,\n            dy: dy + 596 + y - size,\n            dr,\n            styles: {backgroundColor: color, fontSize: 5},\n            width: size,\n            height: size,\n            inside: <img style={avatarStyles} src={'img/' + color + '2.png'} alt=\"\"/>\n        })}\n        {face({\n            orientation: 'E',\n            dz: posZ + z - (5 / 6) * size,\n            dx: posX + x - size / 6,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: color, fontSize: 10},\n            width: size / 3,\n            height: size,\n            inside: <img style={avatarStyles} src={'img/' + color + '3.png'} alt=\"\"/>\n        })}\n        {face({\n            orientation: 'E',\n            dz: posZ + z + size / 6,\n            dx: posX + x - size / 6,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: color, fontSize: 10},\n            width: size / 3,\n            height: size,\n            inside: <img style={avatarStyles} src={'img/' + color + '3.png'} alt=\"\"/>\n        })}\n        {face({\n            orientation: 'N',\n            dz: posZ + z,\n            dx: posX + x - size / 3,\n            dy: dy + 596 + y - size,\n            styles: {backgroundColor: color},\n            width: size,\n            height: size,\n            inside: <img style={avatarStyles} src={'img/' + color + '1.png'} alt=\"\"/>\n        })}\n    </>\n}\n\nfunction RenderAvatars({sid, avatars, posX, posZ, dy}) {\n    return Object.keys(avatars).map(a => {\n        let av = avatars[a];\n        if (a !== sid)\n            return avatar({\n                color: av.color,\n                posX,\n                posZ,\n                dy,\n                size: 51,\n                y: -225,\n                x: -av.posX + 600,\n                z: -av.posZ - 1196 / 2 + 25,\n                dr: 0,\n                sid: a\n            })\n\n    })\n}\n","import React, {useState, useEffect, useRef, useCallback} from \"react\";\n\nimport \"./landingpage.sass\";\n\n/**\n * Helper animate function\n * @param func\n * @param interval\n * @param from\n * @param to\n * @param step\n * @returns {Promise<number>}\n */\nexport function animate({func, interval = 50, from = 1, to = 0, step = 0.17}) {\n    const sleep = n => new Promise(r => setTimeout(r, n));\n    return new Promise(async resolve => {\n        let val = from;\n        while (val > to) {\n            val -= step;\n            func(val);\n            await sleep(interval);\n        }\n        resolve(val);\n    })\n}\n\nexport default function LandingPage({setState, loading}) {\n    const [animating, setAnimating] = useState(1);\n    return <div className=\"centerbox-container\" style={{opacity: animating}}>\n        <div className=\"centerbox\">\n            <h1>cine.stream</h1>\n            <h2>watch together. in 3D. online.</h2>\n            <p>No more \"3..2..1..Start!\" <br/>Join a <i>cinestream</i> to watch closely, virtually.</p>\n            <button\n                disabled={loading}\n                onClick={() => {\n                    animate({func: setAnimating}).then(() =>\n                        setState({\n                            page: 'login',\n                            data: {newRoom: true}\n                        })\n                    )\n                }}\n            >Create a room\n            </button>\n            <br/>\n            <button\n                className={'small'}\n                disabled={loading}\n                onClick={() => {\n                    animate({func: setAnimating}).then(() =>\n                        setState({\n                            page: 'rooms',\n                            data: {}\n                        })\n                    )\n                }}\n            >Find a public room\n            </button>\n        </div>\n        <div className=\"copyright\">Created in &lt;24 hours by Samyok and Sampada Nepal</div>\n    </div>\n}","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport {AvatarGenerator} from 'random-avatar-generator';\nimport {animate} from \"./LandingPage\";\nimport './landingpage.sass'\n\nconst generator = new AvatarGenerator();\n\nexport default function Login({ws, roomID, setState}) {\n\n    const [animating, setAnimating] = useState(1);\n    const [avatar, setAvatar] = useState({\n        random: false,\n        src: null\n    })\n    const [username, setUsername] = useState(null)\n\n\n    let avatarImageSRC = avatar.src ||\n        (avatar.random ? generator.generateRandomAvatar() : generator.generateRandomAvatar(username?.trim()));\n\n    return <div className=\"centerbox-container\" style={{opacity: animating}}>\n        <div className=\"centerbox\">\n            <h1>{roomID ? 'join' : 'create'} a cinespace</h1>\n\n            <input type=\"text\" placeholder={'your username'} required value={username} onChange={(ev) => {\n                setUsername(ev.currentTarget.value)\n            }}/>\n            <button onClick={() => {\n                if (username?.trim().length > 1) {\n                    ws.emit('auth', {\n                        username,\n                        avatar: avatarImageSRC,\n                        newRoom: !roomID,\n                        roomID\n                    })\n                    setState({\n                        page: 'world',\n                        data: {newRoom: true, king: true}\n                    })\n                }\n            }}>{roomID ? 'Join' : 'Create'}\n            </button>\n        </div>\n    </div>\n}","import React, {useState, useEffect, useRef, useCallback} from \"react\";\nimport {io} from \"socket.io-client\";\nimport \"./room.css\";\n\nimport World from './World';\nimport LandingPage from \"./LandingPage\";\nimport Login from \"./Login\";\n\nfunction App() {\n    const ws = useRef({});\n    const [connectedWS, setConnectedWS] = useState(false);\n    const [sid, setSID] = useState(null);\n    const [roomID, setRoomID] = useState(window.location.pathname.substring(1));\n    const [state, setState] = useState({\n        page: roomID ? 'login' : 'landing',\n        data: null\n    })\n    // const debugLanding = true;\n    useEffect(() => {\n        if (connectedWS) return;\n        fetch('/ws').then(r => r.json()).then(r => {\n            ws.current = io(r.endpoint);\n            console.log('connected to ws');\n            setConnectedWS(true);\n            ws.current.on('auth', () => {\n                console.log(ws.current.id);\n                setSID(ws.current.id);\n            })\n            ws.current.on('room', (data) => {\n                window.history.pushState(null, null, data)\n                setRoomID(data)\n            })\n            ws.current.on('closedroom', () => window.location.href = '/');\n        })\n    }, [connectedWS])\n    return <>\n        {state.page === 'landing' && <LandingPage setState={setState} loading={!connectedWS}/>}\n        {state.page === 'login' && <Login roomID={roomID} ws={ws.current} setState={setState}/>}\n        {state.page === 'world' && <World roomID={roomID} sid={sid} ws={ws.current} state={state}/>}\n    </>\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}